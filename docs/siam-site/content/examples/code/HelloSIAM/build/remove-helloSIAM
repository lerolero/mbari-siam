#!/bin/bash

#########################################
# Name: remove-helloSIAM
#
# Summary: Un-installs HelloSIAM files
#
# Description: 
#
# Author: K. Headley
#
# Copyright MBARI
# Copyright 2011, Monterey Bay Aquarium Research Institute.
# Licensed for PUCK-enabled oceanographic instrumentation field-of-use.
# 
# Intellectual Property Disclaimer
# 
# MBARI MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED. 
# BY WAY OF EXAMPLE, BUT NOT LIMITATION, MBARI MAKES NO REPRESENTATIONS 
# OR WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE 
# OR THAT THE USE OF THE LICENSED SOFTWARE COMPONENTS OR DOCUMENTATION 
# WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS. 
# MBARI SHALL NOT BE HELD LIABLE FOR ANY LIABILITY NOR FOR ANY DIRECT, 
# INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIM BY RECIPIENT 
# OR ANY THIRD PARTY ON ACCOUNT OF OR ARISING FROM THIS AGREEMENT OR USE 
# OF THE SOFTWARE OR SPECIFICATION.
#
#########################################

#########################################
# Script configuration defaults
# casual users should not need to change
# anything below this section
#########################################

# default HelloSIAM install directory
INSTALL_DIR="$SIAM_HOME"

# comment out this line to execute script commands
TEST=""

# Uninstall file list
FILES=( ) 
FILES[1]=src/org/mbari/siam/devices/hello
FILES[2]=src/org/mbari/siam/devices/fakeotron
FILES[3]=classes/org/mbari/siam/devices/hello
FILES[4]=classes/org/mbari/siam/devices/fakeotron
FILES[5]=make/Makefile.helloSIAM
FILES[6]=puckxml/hello.xml
FILES[7]=jars/jserial.jar
FILES[8]=utils/fakeotron.sh
FILES[9]=ports/Hello-9999.jar

#################################
# Function Definitions
#################################

#################################
# name: sigTrap
# description: signal trap callback
# will interrupt 
# args: none
#################################
#sigTrap(){
#    exit 0;
#}

#################################
# name: printUsage
# description: print use message
# args: none
#################################
printUsage(){
    echo
    echo "usage: `basename $0`"
    echo "-t  : test (show commands, don't execute) [$TEST]"
    echo "-V  : verbose output                      [$VERBOSE]"
    echo "-h  : print this help message"
    echo ""
    echo
}

########################################
# name: vout
# description: print verbose message to stderr
# args:
#     msg: message
########################################
vout(){
    if [ "$VERBOSE" == "TRUE" ]
    then
	echo "$1" >&2
    fi
}

########################################
# name: exitError
# description: print use message to stderr
# args:
#     msg:        error message
#     returnCode: exit status to return
########################################
exitError(){
    echo >&2
    echo "$1" >&2
    echo >&2
    exit $2
}

##########################
# Script main entry point
##########################

echo ""
read -p "This will remove HelloSIAM from $INSTALL_DIR. Type y to continue [n] " test < /dev/stdin
echo ""
if [ "$test" != "y" ]
then
  echo ""
  echo "exiting"
  echo ""
  exit 0
fi

# Argument processing
#if [ "$#" -eq 0 ];then
#    printUsage
#    exit 0
#fi

while getopts thV Option
do
    case $Option in
	t ) TEST="ECHO"
	;;
	V ) VERBOSE="TRUE"
	;;
	h)printUsage
	  exit 0
	;;
	*) exit 0 # getopts outputs error message
	;;
    esac
done

# call sigTrap on INT,TERM or EXIT
# trap sigTrap INT TERM EXIT

# reset trapped signals
# trap - INT TERM EXIT


if [  ! -d "$INSTALL_DIR" ]
then
echo ""
echo "INSTALL_DIR could not be found"
echo ""
exit 0
fi


vout "uninstalling helloSIAM from $INSTALL_DIR"
vout "TEST=$TEST"

$TEST cd $INSTALL_DIR
for FILE in "${FILES[@]}"
do
echo "removing $FILE"
rm -rf $FILE
done

OLD_MAKE="Makefile.uninstall-`date +%m%d%y-%H%M%S`"
vout "saving Makefile to $OLD_MAKE"
$TEST cp Makefile $OLD_MAKE
$TEST cat Makefile|grep -v -e "org.mbari.siam.devices.fakeotron" -e "org.mbari.siam.devices.hello" -e "jserial.jar" > Makefile.uninstall.tmp
test=$?
if [ "$test" -eq 0 ]
then
 $TEST mv Makefile.uninstall.tmp Makefile
 vout "Uninstall complete"
 echo "previous Makefile saved to $OLD_MAKE"
else
 echo "Could not remove all helloSIAM entries from Makefile"
 $TEST mv $OLD_MAKE Makefile
 vout "cleaning up" 
 rm Makefile.uninstall.tmp
fi
echo "done"
