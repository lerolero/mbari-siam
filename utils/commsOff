#!/bin/bash
# Copyright 2013 MBARI, all rights reserved. 
# For license and copyright details, see COPYRIGHT.TXT in the SIAM project
# home directory.

# Kill ppp session, wait specified interval, turn off radio power

KILL=kill
SIG=TERM
CONNECT_SCRIPT=""
DONE="done"
PEERS="/etc/ppp/peers"
POWER_FLAG=1

# print usage information
usage ()
{
   cat <<EOF
usage: `basename $0` [option] [provider]
options:
  -h        Print this help summary and exit.
  -v        Print version and exit.
  none      Stop pppd for all providers.

Options may not be combined.

EOF
}

# Get option.  If there are none replace the "?" that getopts puts in
# FLAG on error with "null".
getopts avh FLAG
if [ "$?" -ne 0 ]; then
    FLAG="null"
fi
# Check for additional options.  Should be none.
getopts :avh DUMMY
if [ "$?" -eq 0 ]; then
    echo "$0: Illegal option -- ${OPTARG}."
    exit 1
fi

case $FLAG in
 "v") echo "`basename $0` version $Revision: 1.3 $_TrickToPrint_RCS_Revision"; exit 0 ;;
 "h") usage; exit 0 ;;
 "?") exit 1;
esac

# Get PID for the first process with 
# containing text passed in as arg $1
# Value is returned in variable pidrtn
pidrtn=""
getPID(){
    pidrtn=`ps -e|grep $1|sed -e "s/\(^[ \t]*\)\([0-9]*\).*/\2/"`
    return 0
}

# Get connect script name associated with
#  the provider passed in as arg $1
# Value is returned in variable csrtn
csrtn=""
getConnectScript(){
    if [ "$1" == "" ] || [ ! -e $PEERS/$1 ]
	then
	echo "Provider $PEERS/$1 not found. ${DONE}."
	csrtn=""
	return 1
    else
	echo "looking for connect in Provider $PEERS/$1."
	cs=`grep -ie "^[ \t]*connect" $PEERS/$1`
	if [ "$?" -eq 0 ]
	    then
	    tmp=`echo $cs|sed -e "s/.*connect[ \t]*//"`
	    csrtn=`basename $tmp`
	    echo connect script = $csrtn
	    return 0
	else
	    echo "Connect script not found in $PEERS/$1"
	    return 1
	fi
    fi
}

# kill the process specified
# by name passed as arg $1
# output is sent to /tmp/poffResult
# and is used by powerOff()
killPID(){
    >/tmp/poffResult
    killpid=$1
    if [ "$killpid" ]
	then
	echo terminating: $KILL -$SIG $killpid
	$KILL -$SIG $killpid  >& /tmp/poffResult
        killrtn=$?
	grep "Not owner" /tmp/poffResult
	POWER_FLAG=$?
	return $killrtn
    else
	echo kill could not find pid $killpid
    fi
}

# checks for ownership errors in
# /tmp/poffResult (created by 
# killConnectScript) and if no errors
# exist, then turns off rfpower
powerOff(){
    echo "waiting for modem shutdown..."
    sleep 15	      
    /etc/siam/rfpower.ops 1 off
    echo "modem power off"
}

# If a provider (peers file) is 
# specified, find and terminate connect script.
# otherwise, attempt to terminate all
# pppd connect scripts.
# Once all intended connect scripts are terminated,
# or if no pppd scripts have active connect scripts
# terminate pppd processes. 
# Finally, power down the modem unless any connect 
# scripts or pppd processes could not be terminated 
# because they aren't owned by the caller.

if [ "$#" -ge 1 ]
then
    # provider specified
    provider=$1
    echo provider=$provider
    getConnectScript $provider
    result=$?
    echo connect script for provider $provider = $csrtn
    if [ "$result" -eq 0 ]
	then
        getPID $csrtn
	cspid=$pidrtn
        if [ "$cspid" ]
	then
	  echo killing connectScript process ID=$cspid
	  killPID $cspid
	fi
	sleep 2
        ppid=`ps -ef|grep $provider`
        echo ppid0=$ppid provider=$provider
        ppid=`echo $ppid|sed -e "s/\(^[a-zA-Z \t]*\)\([0-9]*\).*/\2/"`
	echo got pppd process $provider $ppid
	if [ "$ppid" ]
	then
	  echo killing pppd process ID=$ppid
	  killPID $ppid
	fi	
    else
	echo "pppd process provider $provider connect script not found"
	sleep 2
	getPID $provider
        ppid=$pidrtn
        echo got pppd process $provider $ppid
	if [ "$ppid" ]
	then
	  echo killing pppd process ID=$ppid
	  killPID $ppid
	fi	
    fi
else
    PIDS=`pidof pppd`
    #PIDS=`ps -ef|grep pppd|sed -e "s/\(^[a-zA-Z \t]*\)\([0-9]*\).*/\2/"`
    if [ "$PIDS" ]
	then
	for pid in $PIDS
	  do
	  echo finding pppd process $pid
	  provider=`ps -ef|grep -e "^[a-zA-Z \t]*$pid"|sed -e "s/\(.*call[ \t]*\)\(.*[ \t]\)/\2/"`
	  echo provider $pid=$provider
	  getConnectScript $provider
	  if [ "$?" -eq 0 ]
	      then
              getPID $csrtn
	      cspid=$pidrtn
              if [ "$cspid" ]
	      then
	        echo killing connectScript process ID=$cspid
	        killPID $cspid
              fi
          fi
	  sleep 2
	  echo killing pppd process ID=$pid
          killPID $pid
	done
    else
	echo "No pppd processes found"
    fi
fi
if [ "$POWER_FLAG" ]
then
  powerOff
else
  echo "Comm port in use; don't cut power"
  # Exit - don't turn off power while someone else is using port!
  exit 255
fi

echo done
exit 0


#/usr/sbin/poff $* >& /tmp/poffResult
#grep "Not owner" /tmp/poffResult
#result=$?
#if [ $result -eq 0 ] 
#then
#  echo "Comm port in use; don't cut power"
#  # Exit - don't turn off power while someone else is using port!
#  exit 255
#fi##

#sleep 15

#/etc/siam/rfpower.ops 1 off

