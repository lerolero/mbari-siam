##############################################################################
#                                                                            #
#                       MTM surface node configuration file                  #
#                                                                            #
##############################################################################
# The siam port configuration file allows the assignment of platform         #
# specific serial port names to siam serial port identifiers.  Assign        #
# the name for the platform specific serial port as follows                  #
#
#                                                                            #
# serialPort<siam port number> = <platform serial port name>                 #
#                                                                            #
# For example:                                                               #
#                                                                            #
# serialPort0 = /dev/ttySA0                                                  #
# serialPort1 = /dev/ttySx2                                                  #
#                                                                            #
# -or-                                                                       #
#                                                                            #
# serialPort0 = COM1                                                         #
# serialPort1 = COM3                                                         #
# serialPort2 = COM4                                                         #
#                                                                            #
# Use siam port numbers in order, if a number in the siam port number        #
# sequence is missing the PortManager will stop searching the config         #
# file for ports.                                                            #
#                                                                            #
# After the ports are configured set the serviceJar associated with the      #
# each port as follows                                                       #
#                                                                            #
# serviceJar<siam port number> = <service jar name>                          #
#                                                                            #
# For example:                                                               #
#                                                                            #
# serviceJar0     = CompassKVHC100.jar                                       #
#                                                                            #
# -or-                                                                       #
#                                                                            #
# serviceJar1     = OceanMaster5000.jar                                      #
#                                                                            #
# If a port does not have an instrument then leave it's serviceJar           #
# entry blank.                                                               #
#                                                                            #
# Assign the name for the platform specific power ports as follows           #
# powerPort<siam port number> = <platform power port type>                   #
#                                                                            #
# For example:                                                               #
#                                                                            #
# powerPort0      = NULL                                                     #
#                                                                            #
# would be a NullPowerPort -or-                                              #
#                                                                            #
# powerPort3      = DPA                                                      #
#                                                                            #
# would be a SidearmPowerPort                                                #
#                                                                            #
##############################################################################

serialPort0     = /dev/ttySX0
powerPort0      = DPA
serviceJar0     = PowerCan-1341.jar

serialPort1     = /dev/ttySX1
powerPort1      = DPA
serviceJar1     = 

serialPort2     = /dev/ttySX2
powerPort2      = DPA
serviceJar2     = SerialAdc-1336.jar

serialPort3     = /dev/ttySX3
powerPort3      = DPA
serviceJar3     = 

serialPort4     = /dev/ttySX4
powerPort4      = DPA
serviceJar4     = 

serialPort5     = /dev/ttySX5
powerPort5      = DPA
serviceJar5     = 

serialPort6     = /dev/ttySX6
powerPort6      = DPA
serviceJar6     = Triaxys-1339.jar

serialPort7     = /dev/ttySX7
powerPort7      = DPA
serviceJar7     = 

serialPort8     = /dev/ttySX8
powerPort8      = DPA
serviceJar8     = PUCK

serialPort9     = /dev/ttySX9
powerPort9      = DPA
serviceJar9     = PUCK

serialPort10    = /dev/ttySX10
powerPort10     = DPA
serviceJar10    = 

serialPort11    = /dev/ttySX11
powerPort11     = DPA
serviceJar11    = Garmin-1344.jar

# NOTE: Environmental sensors are always on /dev/ttySX15 (no DPA on this port)
serialPort12     = /dev/ttySX15
powerPort12     = 
serviceJar12    = MSP430-1335.jar

##############################################################################
# The nodeID is a unique ISI ID assigned to this node                        #
##############################################################################

nodeID = 1333

advertiseService = false

##############################################################################
# The jarLocation entry is location of the serviceJars relative to           #
# SIAM_HOME.                                                                 #
#                                                                            #
# For example:                                                               #
#                                                                            #
# jarLocation     = ports                                                    #
#                                                                            #
# The example above means the service jars would be located at               #
#                                                                            #
#/$SIAM_HOME/jars                                                            #
#                                                                            #
##############################################################################

jarLocation     =  ports    


##############################################################################
# The logLocation entry is location of the serviceLogs relative to           #
# SIAM_HOME.                                                                 #
#                                                                            #
# For example:                                                               #
#                                                                            #
# logLocation     = logs                                                     #
#                                                                            #
# The example above means the service logs would be located at               #
#                                                                            #
#/$SIAM_HOME/logs                                                            #
#                                                                            #
##############################################################################

logLocation =  logs   

##############################################################################
# The platformSerialPorts entry informs RXTX of all of the available serial  #
# ports on the platform.  RXTX will search the system for serial ports if    #
# this entry is left blank or not present, however, RXTX may not find them   #
# all.  If this entry is set RXTX will only know about these serial ports    #
# and will not search for others.  For PC based Linux and Windows systems it #
# may be desirable to remove or comment out this entry.  For sideARM systems #
# the entry should be set as follows.                                        #
#                                                                            #
# platformSerialPorts     =       /dev/ttySX0:\                              #
#                                 /dev/ttySX1:\                              #
#                                 /dev/ttySX2:\                              #
#                                 /dev/ttySX3:\                              #
#                                 /dev/ttySX4:\                              #
#                                 /dev/ttySX5:\                              #
#                                 /dev/ttySX6:\                              #
#                                 /dev/ttySX7:\                              #
#                                 /dev/ttySA2                                #
#                                                                            #
# Note you may use the '\' to follow on an entry but the entry must have no  #
# spaces in it.                                                              #
#                                                                            #
##############################################################################

platformSerialPorts     =       /dev/ttySX0:\
                                /dev/ttySX1:\
                                /dev/ttySX2:\
                                /dev/ttySX3:\
                                /dev/ttySX4:\
                                /dev/ttySX5:\
                                /dev/ttySX6:\
                                /dev/ttySX7:\
                                /dev/ttySX8:\
                                /dev/ttySX9:\
                                /dev/ttySX10:\
                                /dev/ttySX11:\
				/dev/ttySX15:\
                                /dev/ttySA2
                                
##############################################################################
# The codeBaseLocation entry is the absolute location of the nodes codebase. #
#                                                                            #
# For example:                                                               #
#                                                                            #
# codeBaseLocation      = /mnt/hda/codebase                                  #
#                                                                            #
##############################################################################

codeBaseLocation        =  /mnt/hda/codebase


##############################################################################
# The following properties are for the proper operation of SleepManager,     #
# which manages putting the processor into low-power sleep mode and waking   #
# it back up again.                                                          #
#                                                                            #
# Most of these properties have a reasonable default value in the code, and  #
# thus can be omitted if you're willing to accept the defaults               #
#                                                                            #
##############################################################################

#enabled:  true to enable, false means you'll never go to sleep
SleepManager.enabled     = false

#sleepString:  command to invoke to put us to sleep
SleepManager.sleepString = /root/suspend.sh

#pollSeconds:  How often we poll to see if we can go to sleep
#SleepManager.pollSeconds = 2

#sleepDelay:  How long to delay before going to sleep, to allow logs
#to get out to the flash file system.  This one is in milliseconds.
SleepManager.sleepDelay = 0

#wakeupSeconds:  How many seconds we wake up early, to allow things to
# stabilize before sampling.  
#SleepManager.wakeupSeconds = 3

#minSleepSeconds:  Minimum time we'll go to sleep.  If less than this,
# we'll just stay awake.
#SleepManager.minSleepSeconds = 5


##############################################################################
# The following NodeService and CommsManager properties are for managing the #
# communications link between the remote node and the shore portal.          #
#                                                                            #
# Following is a description of the comms session and what the properties    #
# mean.  All values are in milliseconds, and have reasonable defaults.       #
#                                                                            #
# CommsSchedulerTask is responsible for ensuring that a comms link is up for #
# certain number of minutes per hour.  Every <NodeService.leaseRenewalInterval>#
# milliseconds, CommsSchedulerTask establishes a lease (which ensures that   #
# comms are alive) for <NodeService.leaseInterval> milliseconds.	     #
#                                                                            #
# CommsManager.enabled enables CommsLeaseListener.  This should normally     #
# remain true.  If false, not only will CommsLeaseListener never set up the  #
# comms link, but it will also never notify the portal side that the link    #
# is up, if e.g. it's turned on by the boot script.	                     #
#                                                                            #
# CommsManager.onString and CommsManager.offString are the names of Linux    #
# executables to set up and tear down the comms link, respectively.  If      #
# these properties are not defined, CommsLeaseListener does not try to       #
# set up the link, but will directly send the Portal notifications.  This is #
# very useful for testing, e.g. on ethernet.  Just comment out the 	     #
# properties, and it will work on ethernet or any other permanently connected#
# device.								     #
#                                                                            #
# Conversely, CommsManager.protocolWaitTime is the wait time before the link #
# is torn down.  That is, when the last lease either expires or is terminated#
# CommsLeaseListener will send a notifyPortalDisconnecting message, then     #
# wait for protocolWaitTime, and then tear down the link by calling 	     #
# CommsManager.offString						     #
#                                                                            #
# CommsManager.processWaitTime is the time, in milliseconds, that we'll wait #
# for the onString or offString scripts to complete, before we timeout and   #
# kill the respective processes.  If it's missing or <= 0, we wait forever.  #
##############################################################################

CommsManager.enabled = true
NodeService.leaseInterval = 30000

#For deployment

#For testing on ethernet
#NodeService.leaseRenewalInterval = 120000
#CommsManager.protocolWaitTime = 0

# Test at Globalstar interval
NodeService.leaseRenewalInterval = 900000
CommsManager.onString = pon longhaul
CommsManager.offString = commsOff longhaul
CommsManager.protocolWaitTime = 5000
CommsManager.processWaitTime = 60000
